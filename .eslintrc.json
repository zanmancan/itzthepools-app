{
  "root": true,
  "env": {
    "browser": true,
    "es2022": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.eslint.json",
    "tsconfigRootDir": "__dirname"
  },
  "plugins": [
    "@typescript-eslint",
    "react-hooks"
  ],
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended-type-checked",
    "prettier"
  ],
  "rules": {
    /* Keep these strict enough to be useful but not block deploys */
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "eqeqeq": ["warn", "smart"],
    "react-hooks/rules-of-hooks": "warn",
    "react-hooks/exhaustive-deps": "warn",

    /* Practical TS rules */
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-misused-promises": [
      "warn",
      { "checksVoidReturn": false }
    ],

    /* Migration-noise down to warnings so CI doesn’t fail */
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-argument": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/no-floating-promises": [
      "warn",
      { "ignoreVoid": true, "ignoreIIFE": true }
    ]
  },
  "overrides": [
    {
      "files": ["**/*.js", "**/*.jsx"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ],
  "ignorePatterns": [
    ".next/",
    "node_modules/",
    "public/",
    "coverage/",
    "dist/",
    "netlify/"
  ],
  "reportUnusedDisableDirectives": true
}
